<% layout('layouts/master') -%>

<div class="row bg-grey">
  <div class="container">
    <div class="col-md-10 offset-md-2 no-mobile">
      <% include ../../partials/admin/action-tabs %>
    </div>
  </div>
</div>
<div class="container m-full-width">
  <div class="row">
    <% include ../../partials/sidebar %>
    <div class="col-xs-12 bg-grey just-mobile">
      <% include ../../partials/admin/action-tabs %>
    </div>
    <div class="col-md-10">
      <main>
        <% include ../../partials/admin/gift-controller %>

        <table class="table">
          <thead class="thead-inverse">
          <tr>
            <th></th>
            <th>User</th>
            <th>Gift Description</th>
            <th>Order</th>
            <th>Date</th>
            <th>Payment</th>
          </tr>
          </thead>
          <tbody>
          <% items.forEach((gift) => { %>
          <tr>
            <td data-label="Select item">
              <input type="checkbox" class="check"
                     onchange="individualCheck('<%= gift._id %>');">
            </td>
            <td>
              <div class="chip-user d-flex flex-items-md-middle">
                <div class="chip-user__img mr-1">
                  <a href="/dashboard/profile/<%= gift.user._id %>/edit">
                    <img class="img-circle"
                         src="<%= gift.user.profilePic || '/assets/img/user.png' %>"></a>
                </div>
                <div class="chip-user__name">
                          <span class="real-name d-block"><%= gift.user.firstName + ' '
                            + gift.user.lastName %></span>
                  <span class="alias-name d-block"><%= gift.user.aliasFullName %></span>
                </div>
              </div>
            </td>
            <td data-label="Gift description" class="text-primary text-bold"><%= gift.giftDescription %></td>
            <td  data-label="Order" class="text-primary text-bold">
              <a href="/admin/users/<%= gift.user._id %>/gifts/<%= gift._id %>">
                #<%= gift.giftNumber %>
              </a>
            </td>

            <td data-label="Date"><%= (gift.changedStatusDate === undefined) ? gift.date.toLocaleDateString() : gift.changedStatusDate.toLocaleDateString() %></td>

            <% if (gift.user.preferredPaymentMethod === 'paypal') { %>
            <td data-label="Payment"><i class="fa fa-cc-paypal"></i></td>
            <% } else if (gift.user.preferredPaymentMethod === 'check') { %>
            <td data-label="Payment"><i class="fa fa-bank text-primary"> </i></td>
            <% } else if (gift.user.preferredPaymentMethod === 'deposit') { %>
            <td data-label="Payment"><i class="fa fa-dollar text-primary"> </i></td>
            <% } else { %>
            <td data-label="Payment"><i class="fa fa-ban text-primary"> </i></td>
            <% } %>
          </tr>
          <% }) %>
          </tbody>
        </table>
        <% if(!items || items.length < 1) { %>
        <div class="container empty-state">
          <i class="icon fa fa-gift"></i>
          <h1>No gifts to show</h1>
        </div>
        <% } %>
      </main>

      <pagination>
        <% if(pagination.pages > 1) { %>
        <ul class="pagination">
          <li class="page-item <%= (query.page == 1) ? 'disabled' : '' %>">
            <a href="/admin/gifts?filter=<%= query.filter %>&page=1" class="page-link"> << </a>
          </li>
          <li class="page-item <%= (query.page == 1) ? 'disabled' : '' %>">
            <a href="/admin/gifts?filter=<%= query.filter %>&page=<%= (query.page > 1) ? query.page - 1 : 1 %>"
               class="page-link"> < </a>
          </li>

          <% for(let page = 1; page <= pagination.pages; page++) { %>
          <li class="page-item <%= (query.page == page) ? 'active' : '' %>">
            <a href="/admin/gifts?filter=<%= query.filter %>&page=<%= page %>" class="page-link">
              <%= page %>
            </a>
          </li>
          <% } %>

          <li class="page-item <%= (query.page >= pagination.pages) ? 'disabled' : '' %>">
            <a href="/admin/gifts?filter=<%= query.filter %>&page=<%= (query.page < pagination.pages) ? query.page + 1 : pagination.pages %>"
               class="page-link"> > </a>
          </li>
          <li class="page-item <%= (query.page >= pagination.pages) ? 'disabled' : '' %>">
            <a href="/admin/gifts?filter=<%= query.filter %>&page=<%= pagination.pages %>" class="page-link"> >> </a>
          </li>
        </ul>
        <% } %>
      </pagination>

    </div>
  </div>
</div>
<% if(items && items.length > 0) { %>
<script>

  //get list gifts from template
  var gifts = <%- JSON.stringify(items) %>;
  gifts.forEach(function(gift) {
    gift['select'] = false;
  });

  function individualCheck(id) {
    console.log('id: ', id);
    gifts.forEach(function(gift) {
      if (gift._id === id) {
        gift['select'] = !gift.select;
        return;
      }
    });
    console.log('gifts: ', gifts);
  }

  var selectAll = false;
  function selectedAllGifts() {
    selectAll = !selectAll;
    gifts.forEach(function(gift) {
      gift['select'] = selectAll;
    });
    console.log('gifts: ', gifts);
  }

  //default status type
  var defaultStatusType = {
    accepted: false,
    declined: false,
    paid: false,
    redeemed: false,
    review: true
  };

  var statusType = defaultStatusType;

  var bulkAction = 'default';

  //Update status type for param
  function updateStatusType(type) {
    statusType = defaultStatusType;
    statusType.review = false;
    statusType[type] = true;
    bulkAction = 'status';
    console.log('update status to :', type);
  }

  function actionExcel() {
    bulkAction = 'excel';
  }

  $('#goForm').submit(function(e) {
    e.preventDefault();

    console.log('goForm clicked');

    //if action is update status
    if (bulkAction === 'status') {
      //Update status object in collection gifts
      gifts.forEach(function(gift) {
        gift.status = statusType;
      });

      var finalGifts = gifts.filter(function(gift) {
        if (gift.select) {
          return gift;
        }
      });

      var $this = $(this);
      $.ajax({
        url: $this.attr('action'),
        type: $this.attr('method'),
        data: { gifts: finalGifts },
        success: function(response) {
          if (response.message) {
            $('.noty-alerts:first').noty({
              text: response.message,
              type: 'success'
            });
          }
          setTimeout(
            function() {
              window.location.reload();
            },
            3000
          );
        },
        error: function(jqXHR) {
          var response = $.parseJSON(jqXHR.responseText);
          if (response.message) {
            $('.noty-alerts:first').noty({
              text: response.message,
              type: 'alert'
            });
          }
        }
      });
    } else if (bulkAction === 'excel') {
      //Export to excel
      var xhr = new XMLHttpRequest();
      xhr.open('POST', '/admin/gifts/excel-report', true);
      xhr.responseType = 'arraybuffer';
      xhr.onload = function() {
        if (this.status === 200) {
          var filename = '';
          var disposition = xhr.getResponseHeader('Content-Disposition');
          if (disposition && disposition.indexOf('attachment') !== -1) {
            var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
            var matches = filenameRegex.exec(disposition);
            if (matches != null && matches[1])
              filename = matches[1].replace(/['"]/g, '');
          }
          var type = xhr.getResponseHeader('Content-Type');

          var blob = new Blob([this.response], { type: type });
          if (typeof window.navigator.msSaveBlob !== 'undefined') {
            window.navigator.msSaveBlob(blob, filename);
          } else {
            var URL = window.URL || window.webkitURL;
            var downloadUrl = URL.createObjectURL(blob);

            if (filename) {
              var a = document.createElement('a');
              if (typeof a.download === 'undefined') {
                window.location = downloadUrl;
              } else {
                a.href = downloadUrl;
                a.download = filename;
                document.body.appendChild(a);
                a.click();
              }
            } else {
              window.location = downloadUrl;
            }

            setTimeout(
              function() {
                URL.revokeObjectURL(downloadUrl);
              },
              100
            );
          }
        } else {
          alert('Error, contact support');
        }
      };

      var finalGifts = gifts.filter(function(gift) {
        if (gift.select) {
          return gift;
        }
      });

      xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
      xhr.send(JSON.stringify({ gifts: finalGifts }));
    }
  });


</script>
<% } %>

